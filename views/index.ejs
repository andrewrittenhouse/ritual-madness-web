<html>
  <head>
    <title>Ritual Madness</title>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="<%= publicPath %>/stylesheets/cool-input.css">
    <style>
      :root {
        --container-width: 200px;
      }

      * {
        font-family: "Century Gothic", CenturyGothic, AppleGothic, sans-serif;
      }

      body {
        display: flex;
        flex-direction: column;
        align-items: center;
        color: #f2f3f4;
        background-color: #414a4c;
        font: 14px "Lucida Grande", Helvetica, Arial, sans-serif;
        margin: 0;
      }

      body > * {
        width: var(--container-width);
      }

      header {
        height: 4rem;
        width: 100%;
      }

      header h1 {
        text-align: center;
      }

      h2 {
        margin-top: 3rem;
      }

      .canvas-container {
        display: flex;
        align-items: center;
        justify-content: center;

        text-align: center;

        z-index: -1;
      }

      .songList {
        display: flex;
        flex-direction: column;
        align-items: start;
        margin-top: 1rem;
      }

      .songList div {
        border: 1px solid black;
        border-radius: 1rem;
        margin-top: 1rem;
        width: 16rem;
      }

      .songList div:hover {
        cursor: pointer;
        color: white;
        background-color: black;
      }

      canvas {
        height: var(--container-width);
        width: var(--container-width);
        margin: 2rem 0;
      }

      .audio {
        text-align: center;
        width: 100%;
      }

      audio::-webkit-media-controls-panel {
        background-color: white;
      }

      @media (min-width: var(--container-width)) {
        
      }
    </style>
  </head>
  <body>
    <header>
      <h1>Ritual Madness</h1>
    </header>

    <div class="canvas-container">
      <canvas></canvas>
    </div>

    <div class="audio">
      <audio controls>
        <source />
      </audio>
    </div>

    <h2>Unplugged Cyborg Demo</h2>

    <div class="songList">
      <button onmousedown="playSong(0)">Wait and See</button>
      <button onmousedown="playSong(1)">Count on You</button>
      <button onmousedown="playSong(2)">We Were Then</button>
      <button onmousedown="playSong(3)">Down Low</button>
      <button onmousedown="playSong(4)">Feels So Good to Me</button>
      <button onmousedown="playSong(5)">Try</button>
      <button onmousedown="playSong(6)">Not Where I Belong</button>
      <button onmousedown="playSong(7)">Satellite</button>
      <button onmousedown="playSong(8)">She's a Witch</button>
    </div>

    <h2>Bad Recordings</h2>

    <div class="songList">
      <button onmousedown="playSong(9)">Mad Scientist</button>
      <button onmousedown="playSong(10)">Summer Sun</button>
      <button onmousedown="playSong(11)">Black Magic Baby</button>
      <button onmousedown="playSong(12)">Paradise</button>
      <button onmousedown="playSong(13)">Apocalypse Kid</button>
      <button onmousedown="playSong(14)">New Machine</button>
    </div>
    
    <script>
      const songs = [
        '<%= publicPath %>/media/01 - wait and see.mp3',
        '<%= publicPath %>/media/02 - count on you.mp3',
        '<%= publicPath %>/media/03 - we were then.mp3',
        '<%= publicPath %>/media/04 - down low.mp3',
        '<%= publicPath %>/media/05 - feels so good to me.mp3',
        '<%= publicPath %>/media/06 - try.mp3',
        '<%= publicPath %>/media/07 - not where i belong.mp3',
        '<%= publicPath %>/media/08 - satellite.mp3',
        '<%= publicPath %>/media/09 - shes a witch.mp3',
        '<%= publicPath %>/media/01 - mad scientist.mp3',
        '<%= publicPath %>/media/02 - summer sun.mp3',
        '<%= publicPath %>/media/03 - black magic baby.mp3',
        '<%= publicPath %>/media/04 - paradise.mp3',
        '<%= publicPath %>/media/05 - apocalypse kid.mp3',
        '<%= publicPath %>/media/06 - new machine.mp3'
      ];

      const canvas = document.querySelector('canvas');
      const songButtons = document.getElementsByTagName('button');
      const player = document.querySelector('audio');

      let songIndex = 0;

      function playSong(i) {
        selectSong(i);

        player.play();
      }

      function selectSong(index) {
        for (let songButton of songButtons) {
          songButton.classList.remove('on');
          songButton.classList.add('off');
        }

        songButtons[index].classList.add('on');
        songButtons[index].classList.remove('off');

        if (player) {
          player.pause();
        }

        player.src = songs[index];

        songIndex = index;

        player.load();
      }

      player.addEventListener('ended', () => {
        const next = (songIndex + 1) % songs.length;

        if (next === 0) {
          selectSong(0);

          return;
        }
        
        playSong(next);
      });

      selectSong(0);

      const canvasSize = 200 * window.devicePixelRatio;

      canvas.width = canvasSize;
      canvas.height = canvasSize;

      const worker = new Worker('<%= publicPath %>/scripts/animation-worker.js');

      const offscreenCanvas = canvas.transferControlToOffscreen();

      worker.postMessage({ 
        message: 'animate', 
        params: { 
          canvas: offscreenCanvas,
          devicePixelRatio: window.devicePixelRatio, 
          radius: canvasSize / 2
        }
      }, [offscreenCanvas]);
    </script>
  </body>
</html>